name: PHP Metrics Report

on:
  push:
    branches: [main, test-phpmetrics] # 検証ブランチを追加
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  analyze:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.4
        # TODO: Use secrets for password
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, json, phar, tokenizer
          coverage: xdebug

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: |
          composer update --prefer-dist --no-progress --no-interaction
          composer install --prefer-dist --no-progress --no-interaction

      - name: Install PHPMetrics
        run: composer require --dev phpmetrics/phpmetrics

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install npm dependencies
        run: npm ci

      - name: Build frontend assets
        run: npm run build

      - name: Setup Laravel application
        run: |
          cp .env.example .env
          php artisan key:generate
          php artisan migrate --force
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: laravel_test
          DB_USERNAME: root
          DB_PASSWORD: password

      - name: Run tests with coverage
        run: vendor/bin/pest --log-junit junit.xml --coverage-clover coverage.xml
        continue-on-error: true
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: laravel_test
          DB_USERNAME: root
          DB_PASSWORD: password

      - name: Generate PHPMetrics report
        run: |
          mkdir -p public/metrics
          vendor/bin/phpmetrics --report-html=public/metrics \
            --report-violations=public/metrics/violations.xml \
            --junit=junit.xml \
            --git \
            --exclude=vendor,node_modules,tests,database,bootstrap,storage,public \
            app/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public/metrics

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
